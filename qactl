#!/bin/bash

debugmode=false
cd /opt/q-indexer

source functions.sh
consoleip="$(getconf consoleip)"
apitoken="$(getconf apitoken)"
apiversion="$(getconf apiversion)"



echo $apitoken > /tmp/mytoken


if [[ "$1" == "-h" ]]; then
plog INFO consoleip=$consoleip
plog INFO apitoken=$apitoken
plog INFO apiversion=$apiversion
echo
echo 'Usage:
--
Delete minute, super indexes:'
echo $0 -d '"2021/12/13 11:00" 60'
echo '
Rebuild minute, super indexes:'
echo $0 -db '"2021/12/13 11:00" 60'
echo '
List all searches:'
echo $0 -listallsearches
echo '
Get search data :'
echo $0 -getsearch 732c9c2a-c0f1-49e6-8e20-3d4568cecea4
echo '
Delete all searches:'
echo $0 -deleteallsearches
echo '
Delete a search cache :'
echo $0 -deletesearch 732c9c2a-c0f1-49e6-8e20-3d4568cecea4
echo '
Perform a search and check dataFilecounter:'
echo $0 -checkdatafilecount 1991 '"2021-12-13 10:00:00" "2021-12-13 10:59:00" 0.2.0.1'
echo '
Perform a search and check dataFilecounter:'
echo $0 -checkdatafilecount 1991 '"2021-12-13 10:00:00" "2021-12-13 10:59:00" 0.2.0.1 10.10.2.10:32011'
exit 0

elif [[ "$1" == "-ds" ]]; then
searchid="$2"
curl -k -S -X DELETE -H 'Version: '"$apiversion"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches/$searchid" --header "SEC: $apitoken"


elif [[ "$1" == "-d" ]]; then
	#test parameters: qactl -d "2021-12-11 02:00" 60 
	enddate="$2"
	minutes="$3"
	# remove minute indexes TODO
	echo INFO deleting old minute indexes
	echo CMD: /opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a -r
	/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a -r
	echo done.

	#echo INFO creating minute indexes
	#/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a
	echo INFO deleting old super indexes
	echo CMD: /opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -s -r
	/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -s -r
	echo done.
elif [[ "$1" == "-listallsearches" ]]; then
	key="$2"
	#curl -k -S -X GET -H 'Range: items=0-10000' -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --header "SEC: $apitoken" 2>/dev/null   |jq '.[]' |tr -d '"'
	i=0
	for searchid in $(curl -k -S -X GET -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --header "SEC: $apitoken" 2>/dev/null |jq '.[]' |tr -d '"'); do
		i=$((i+1))
		echo "no=$i;$(curl -k -S -X POST -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches/$searchid" 2>/dev/null | jq '"status=" + (.status|tostring) + ";searchid=" + (.search_id|tostring) + ";index_file_count:" + (.index_file_count|tostring) + ";data_file_count=" + (.data_file_count|tostring) + ";aql=" + (.query_string)')"
	done
	exit 0

elif [[ "$1" == "-getsearch" ]]; then
	getsearch $2
	exit 0

elif [[ "$1" == "-deletesearch" ]]; then
	searchid="$2"
	echo INFO deleting searchid=$searchid 
	echo curl -k -S -X DELETE -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches/$searchid" result: $(curl -k -S -X DELETE -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches/$searchid" 2>/dev/null | jq '.status')
	exit 0
elif [[ "$1" == "-deleteallsearches" ]]; then
	key="$2"
	#curl -k -S -X GET -H 'Range: items=0-10000' -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --header "SEC: $apitoken" 2>/dev/null   |jq '.[]' |tr -d '"'
	echo INFO deleting all searches which are fetched from /api/ariel/searches
	i=0
	for searchid in $(curl -k -S -X GET -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --header "SEC: $apitoken" 2>/dev/null |jq '.[]' |tr -d '"'); do
		i=$((i+1))
		echo curl -k -S -X DELETE -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches/$searchid" result: $(curl -k -S -X DELETE -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches/$searchid" 2>/dev/null | jq '.status')
	done
	exit 0
elif [[ "$1" == "-db" ]]; then
	#test parameters: qactl -db "2021-12-13 11:00" 60 
	enddate="$2"
	minutes="$3"
	# remove minute indexes TODO
	echo INFO deleting old minute indexes
	echo CMD: /opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a -r
	/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a -r
	echo done.
	echo INFO creating minute indexes
	echo CMD: /opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a
	/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -a
	echo done.
	echo INFO deleting old super indexes
	echo CMD: /opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -s -r
	/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -s -r
	echo done.
	echo INFO creating super indexes
	echo CMD: /opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -s
	/opt/qradar/bin/ariel_offline_indexer.sh -n events -v -t "$enddate" -d $3 -s
	echo done.

	#once minute index olusturulacak -a;  dururken super i silecez; minute leri merge edip yeni super
	exit 1
elif [[ "$1" == "-checkdatafilecount" ]]; then
######
#test parameters: qactl 1111 "2021-12-11 01:00:00" "2021-12-11 01:59:59"
#####
export key="$2"
export ip="$5"
export start="$3"
export end="$4"
export hostid="$6"
#echo INFO Checking related searches
#for searchid in $(curl -k -S -X GET -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --header "SEC: $apitoken" 2>/dev/null |jq '.[]' |tr -d '"'); do
#        grep $searchid /var/log/audit/audit.log |grep $key &>/dev/null
#	if [[ $? -eq 0 ]]; then
#		echo Related search detected $searchid
#		grep $searchid /var/log/audit/audit.log |grep $key |awk '{ print $1" "$2" "$3}'
#		grep $searchid /var/log/audit/audit.log |grep $key |grep -o 'AQL:.*'
#	fi
#done
#echo done.
#echo
#echo

cd /transient/ariel_proxy.ariel_proxy_server/data
plog DEBUG "Checking related searches in /transient"
grep "$key" /transient/ariel_proxy.ariel_proxy_server/data/*.alias | sed -r 's#.+searchId="(.+?)"\saliasId="(.+?)" acl.+#\1%\2#' |tr '%' '\n'
for searchid in $(grep "$key" /transient/ariel_proxy.ariel_proxy_server/data/*.alias | sed -r 's#.+searchId="(.+?)"\saliasId="(.+?)" acl.+#\1%\2#' |tr '%' '\n'); do
	deletesearch "$searchid"
done


if [[ "$hostid" == "" ]]; then
	plog INFO Performing search
	aql="select $key from events where sourceip='$ip' START '$start' STOP '$end'"
	/bin/rm -fr /tmp/result.json
	echo Result:
	curl -k -S -X POST -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --data-urlencode "query_expression=$aql" 2>/dev/null  -o /tmp/result.json
	cat /tmp/result.json
        datafilecount="$(curl -k -S -X POST -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --data-urlencode "query_expression=$aql" 2>/dev/null |tee /tmp/datafilecount.json | jq '.data_file_count')"
        indexfilecount="$(curl -k -S -X POST -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --data-urlencode "query_expression=$aql" 2>/dev/null |tee /tmp/indexfilecount.json | jq '.index_file_count')"
	searchid="$(cat /tmp/result.json | jq '.search_id' |tr -d '"')"
	deletesearch "$searchid"
	searchid="$(cat /tmp/datafilecount.json | jq '.search_id' |tr -d '"')"
	deletesearch "$searchid"
	searchid="$(cat /tmp/indexfilecount.json | jq '.search_id' |tr -d '"')"
	deletesearch "$searchid"
# increase HEAP size offline indexer
else
		plog DEBUG "Performing search for $hostid"
		aql="select $key from events where sourceip='$ip' START '$start' STOP '$end' PARAMETERS REMOTESERVERS='$hostid'" 
		plog DEBUG aql=$aql
		cmd="curl -k -S -X POST -H 'SEC: $apitoken' -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' 'https://$consoleip/api/ariel/searches' --data-urlencode 'query_expression=$aql'"
		curlout="$wlogfolder/result.json"
		/bin/rm -fr $curlout
		curl -k -S -X POST -H "SEC: $apitoken" -H 'Version: '"${apiversion}"'' -H 'Accept: application/json' "https://$consoleip/api/ariel/searches" --data-urlencode "query_expression=$aql" 2>/dev/null -o $curlout
		if [ $? -ne 0 ]; then
			errorlog $cmd
		else
			debuglog $cmd
		fi
		cat $curlout | jq '.data_file_count' 
		searchid="$(cat $curlout | jq '.search_id' |tr -d '"')"
		startcounter="$(date +%s)"
		while true; do 
			status=$(getstatus $searchid)
			plog DEBUG "searchStatus=$status"
			sleep 1
			if [[ "$status" == "COMPLETED" ]]; then
				endcounter="$(date +%s)"
	        		query_execution_time="$(getsearch $searchid query_execution_time)"
				plog "INFO search completed successfully in $(expr $endcounter - $startcounter) seconds. (query_execution_time=${query_execution_time}ms)"
				break
			fi
	
		done
	
	        datafilecount="$(getsearch $searchid data_file_count)"
	        indexfilecount="$(getsearch $searchid index_file_count)"
	
		if [[ ! -e /tmp/do-not-delete-search ]]; then
			searchid="$(cat /tmp/result.json | jq '.search_id' |tr -d '"')"
			deletesearch "$searchid"
		fi
	
	fi
	plog INFO dataFileCount is $datafilecount...
	plog INFO indexFileCount is $indexfilecount...
	plog DEBUG "$key;$aql;$datafilecount"
fi
exit 0
